---
plugin: "jenkins"
version: "0.1"
description: "CI jenkins plugin for FORJJ."
runtime:
  docker:
    image: "forjdevops/forjj-jenkins"
    dood: true
  service_type: "REST API"
  service:
    #socket: "jenkins.sock"
    parameters: [ "service", "start", "--templates", "/templates"]
created_flag_file: "{{ .InstanceName }}/forjj-{{ .Name }}.yaml"
task_flags:
  common:
    forjj-infra-upstream:
      help: "address of the infra repository upstream"
    forjj-infra:
      help: "Name of the Infra repository to use"
    forjj-instance-name:
    forjj-source-mount:
    forjj-organization:
    debug:
      help: "To activate jenkins debug information"
    forjj-source-mount:
      help: "Where the source dir is located for jenkins plugin."
  maintain:
    deploy-to:
      default: docker
      help: "Where jenkins will be published."
objects:
  app:
    default-actions: ["add", "change"]
    groups:
      dockerfile:
        flags:
          # Information we can define for the Dockerfile.
          from-image:
            help: "Base Docker image tag name to use in Dockerfile(FROM). Must respect [[server/]repo/]name."
            default: forjdevops/jenkins
          from-image-version:
            help: "Base Docker image tag version to use in Dockerfile. By default, it uses 'latest'."
          maintainer:
            help: "Jenkins image maintainer"
      final-image:
        flags:
          name:
            help: "Docker image name for your final generated Jenkins Image. Do not set the Server or Repo name. Use final-docker-registry-server and final-docker-repo-name."
            default: "{{ .Forjfile.ForjSettings.Organization | ToLower }}-jenkins"
          version:
            help: "Docker image tag version for your generated Jenkins Image."
          registry-server:
            help: "Docker registry server name where your image will be pushed. If not set, no push will be done."
            default: hub.docker.com
          registry-repo-name:
            help: "Docker Repository Name where your image will be pushed. If not set, no push will be done."
            default: "{{ .Forjfile.ForjSettings.Organization | ToLower }}"
      deploy:
        flags:
          to:
            help: "Deployment name used to deploy jenkins."
            default: "docker"
          service-addr:
            help: "Exposed service CNAME or IP address of the expected jenkins instance"
          service-port:
            default: 8080
            help: "Expected jenkins instance port number."
      ssl:
        flags:
          private-key:
            help: SSL private key to use to use the ssh certificate in jenkins.
            secure: true
            cli-exported-to-actions: ["maintain"]
          certificate:
            help: SSL Certificate file to certify your jenkins instance.
      github-user:
        flags:
          username:
            help: github user name. Recommended. Stored as github-user credential in jenkins.
          password:
            help: github user password. Recommended. Stored as github-user credential in jenkins.
            secure: true
            envar: "USER_PASS"
            cli-exported-to-actions: ["maintain"]
    flags:
      seed-job-repo:
        help: "url to the seed job repository. By default, it uses the <YourInfraRepo>. Jobs are defined under job-dsl."
        default: "{{ .Forjfile.Infra.RemoteUrl }}"
      registry-auth:
        help: "List of Docker registry servers authentication separated by coma. One registry server auth string is build as <server>:<token>[:<email>]"
        secure: true
        envar: "REGISTRY_AUTH"
        cli-exported-to-actions: ["maintain"]
      admin-pwd:
        help: "To replace the default simple security admin password"
        secure: true
        cli-exported-to-actions: ["maintain"]
  features:
    default-actions: ["add", "change", "remove"]
    identified_by_flag: name
    flags:
      name:
        help: "name of the jenkins feature"
        required: true
      options:
        help: "List of feature option to use"
      type:
        help: "Type of feature. Can be plugin or feature. Default is feature."
        default: feature
  projects:
    default-actions: ["add", "change", "remove"]
    identified_by_flag: name
    flags:
      name:
        help: "Project name"
        required: true
      remote-type:
        default: "{{ $Project := .Current.Name }}{{ (index .Forjfile.Repos $Project).RemoteType }}"
        help: "Define remote source  type. 'github' is used by default. Support 'git', 'github'."
    groups:
      github:
        flags:
          api-url:
            default: "{{ $Project := .Current.Name }}{{ (index .Forjfile.Repos $Project).UpstreamAPIUrl }}"
            help: "with remote-type = 'github', Github API Url. By default, it uses public github API."
          repo-owner:
            default: "{{ $Project := .Current.Name }}{{ (index .Forjfile.Repos $Project).Owner }}"
            help: "with remote-type = 'github', Repository owner. Can be a user or an organization."
          repo:
            default: "{{ .Current.Name }}"
            help: "with remote-type = 'github', Repository name."
      git:
        flags:
          remote-url:
            help: "with remote-type = 'git', Remote repository url."
